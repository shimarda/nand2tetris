// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    //// Replace this comment with your code.
    DMux8Way(in=load , sel=address[3..5] , a=in0, b=in1, c=in2, d=in3, e=in4, f=in5, g=in6, h=in7);


    RAM8(in=in , load=in0, address=address[0..2], out=w0 ); // 000000 ~ 000111
    RAM8(in=in , load=in1, address=address[0..2], out=w1 ); // 001000 ~ 001111
    RAM8(in=in , load=in2, address=address[0..2], out=w2 ); // 010000 ~ 010111
    RAM8(in=in , load=in3, address=address[0..2], out=w3 ); // 011000 ~ 011111
    RAM8(in=in , load=in4, address=address[0..2], out=w4 ); // 100000 ~ 100111
    RAM8(in=in , load=in5, address=address[0..2], out=w5 ); // 101000 ~ 101111
    RAM8(in=in , load=in6, address=address[0..2], out=w6 ); // 110000 ~ 110111
    RAM8(in=in , load=in7, address=address[0..2], out=w7 ); // 111000 ~ 111111

    Mux8Way16(a=w0, b=w1, c=w2, d=w3, e=w4, f=w5, g=w6, h=w7, sel=address[3..5] , out=out);


    
}